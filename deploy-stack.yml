AWSTemplateFormatVersion: 2010-09-09
Description: user service stack
Parameters:
  AppEnv:
    Type: String
    Default: dev
    Description: The environment profile the app will be deployed in
  AppName:
    Type: String
    Default: user-service
    Description: The application name
  ServiceName:
    Type: String
    Default: dev-user-service
    Description: The service name
  ServicePort:
    Type: Number
    Description: The service port number
  HealthPath:
    Type: String
    Description: Path for health check
    Default: /users/health
Resources:
  MicroService:
    Type: 'AWS::ECS::Service'
    DependsOn: UserListener
    Properties:
      ServiceName: !Ref ServiceName
      Cluster: !Sub '{{resolve:secretsmanager:ClusterName:SecretString}}'
      TaskDefinition: !Ref ServiceTask
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Sub '{{resolve:secretsmanager:PrivateSubnet:SecretString}}'
          SecurityGroups:
            - !Sub '{{resolve:secretsmanager:SecurityGroup:SecretString}}'
      LoadBalancers:
        - ContainerName: !Ref ServiceName
          ContainerPort: !Ref ServicePort
          TargetGroupArn: !Ref ServiceTargetGroup

  ServiceTask:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Memory: 2048
      Cpu: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Sub '{{resolve:secretsmanager:TaskExecutionRole:SecretString}}'
      TaskRoleArn: !Sub '{{resolve:secretsmanager:TaskExecutionRole:SecretString}}'
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Image: !Sub >-
            ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ServiceName}:latest
          PortMappings:
            - ContainerPort: !Ref ServicePort
          Environment:
            - Name: TWILIO_SID
              Value: >-
                {{resolve:secretsmanager:twilio/sid_token:SecretString:TWILIO_SID}}
            - Name: TWILIO_TOKEN
              Value: >-
                {{resolve:secretsmanager:twilio/sid_token:SecretString:TWILIO_TOKEN}}
            - Name: JWT_SECRET
              Value: '{{resolve:secretsmanager:jwt/key:SecretString:JWT_SECRET}}'
            - Name: DB_USER
              Value: >-
                {{resolve:secretsmanager:rds/eastcoders-db/login:SecretString:username}}
            - Name: DB_PASS
              Value: >-
                {{resolve:secretsmanager:rds/eastcoders-db/login:SecretString:password}}
          Essential: true
          Memory: 2048
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub '${AppName}/${AppEnv}/${ServiceName}'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Sub '${ServiceName}-${AppEnv}'
              awslogs-create-group: 'true'

  ServiceTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: !Ref ServicePort
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: !Ref HealthPath
      HealthCheckTimeoutSeconds: 5
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      TargetType: ip
      Matcher:
        HttpCode: '200,401'
      VpcId: !Sub '{{resolve:secretsmanager:Vpc:SecretString}}'

  UserListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Sub '{{resolve:secretsmanager:LoadBalancer:SecretString}}'
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ServiceTargetGroup
      Port: !Ref ServicePort
      Protocol: HTTP
